*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Roboto,sans-serif;font-weight:300;font-size:1.8rem;color:hsla(0,0%,100%,.72)}.wrapper-main{background-image:url(../img/background-image.jpg);background-size:cover;background-position:50% 40%;background-repeat:no-repeat;padding:2rem;width:100%;height:100vh}.nav{font-family:Anton,sans-serif}.nav--desktop{display:none;width:80vw;max-width:1000px;margin:auto}.nav--mobile{padding-right:2rem}.nav__box{position:fixed;padding:.5rem 4rem .5rem .5rem;top:50%;left:-100%;transform:translateY(-50%);background-color:rgba(43,37,37,.535);transition:.3s ease}.nav__box--active{left:0}.nav__burger-icon{position:fixed;top:2rem;left:2rem}.nav__list{margin:auto}.nav__list-item{list-style:none;padding:2rem 0;cursor:pointer}.nav__list-item:hover a,.nav__list-item:hover i{color:#20ce88}.nav__list-item a{color:hsla(0,0%,100%,.72);text-decoration:none;letter-spacing:2px;transition:.3s;text-transform:uppercase}.nav__list-item i{color:hsla(0,0%,100%,.72);width:4rem;padding:0 1rem;margin-right:2rem}.container{margin:8vh auto auto;max-width:1000px;width:80vw;height:80vh;background-color:rgba(43,37,37,.535)}.container__title{text-transform:uppercase;font-size:2.2rem;padding:1rem 0;letter-spacing:4px;display:flex;justify-content:center}.footer{position:absolute;bottom:0;left:0;width:100%}.footer__socials{position:fixed;right:0;bottom:0;display:flex;flex-direction:column;align-items:center;margin-bottom:4rem;background-color:rgba(43,37,37,.535)}.footer__socials i{color:hsla(0,0%,100%,.72);padding:.3rem;transition:.3s;font-size:2rem}.footer__socials i:hover{color:#20ce88}@media (max-height:600px) and (orientation:landscape){.nav__list-item{padding:1rem}.nav__box{transform:translateY(-40%)}}@media (min-width:576px){.nav{font-size:1.8rem}.nav .hamburger-inner,.nav .hamburger-inner:after,.nav .hamburger-inner:before{width:40px}.footer{position:absolute;bottom:0;left:0;width:100%}.footer__socials i{padding:1rem;font-size:2.2rem}.footer__socials i:hover{color:#20ce88}}@media (min-width:900px){.nav{max-width:1000px;margin:auto}.nav--mobile{display:none}.nav--desktop{display:block}.nav__list{display:flex;flex-direction:row;justify-content:space-around}.container{height:70vh}footer__socials{margin-bottom:6rem;padding:2rem 1rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
