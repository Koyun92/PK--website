*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Roboto,sans-serif;font-weight:300;font-size:1.8rem;color:hsla(0,0%,100%,.72)}.wrapper-main{background-image:url(../img/background-image.jpg);background-size:cover;background-position:50% 40%;background-repeat:no-repeat;padding:2rem 0;width:100%;height:100vh}a{text-decoration:none;color:hsla(0,0%,100%,.72)}.nav{font-family:Anton,sans-serif}.nav--desktop{display:none;width:80vw;max-width:1000px;margin:auto;font-size:2rem}.nav--mobile{padding-right:2rem}.nav__box{position:fixed;padding:.5rem 4rem .5rem .5rem;top:50%;left:-100%;transform:translateY(-50%);background-color:rgba(43,37,37,.837);transition:.3s ease;z-index:100}.nav__box--active{left:0}.nav__burger-icon{position:fixed;z-index:100;top:2rem;left:2rem}.nav__list{margin:auto}.nav__list-item{list-style:none;padding:2rem 0;cursor:pointer}.nav__list-item:hover a,.nav__list-item:hover i{color:#20ce88}.nav__list-item a{color:hsla(0,0%,100%,.72);text-decoration:none;letter-spacing:2px;transition:.3s;text-transform:uppercase}.nav__list-item i{color:hsla(0,0%,100%,.72);width:4rem;padding:0 1rem;margin-right:2rem}.splide{padding-top:2rem}.splide__slide img{width:100%;height:auto}.splide__slide{display:flex;justify-content:center}main{overflow:hidden;box-sizing:content-box}.container{scrollbar-width:none;margin:auto;position:absolute;padding-top:2%;z-index:0;top:15%;left:0;right:0;bottom:15%;background-color:rgba(43,37,37,.645);overflow-Y:scroll;font-family:Roboto,sans-serif}.container::-webkit-scrollbar{display:none}.container--contact{display:flex;flex-direction:column}.container--about p{width:80%;padding:2rem;margin:auto;text-align:justify}.container--about h3{text-align:center;text-transform:uppercase}.container__wrapper{max-width:1000px;margin:2rem auto}.container__wrapper i{padding-right:.5rem}.container__box{margin:3rem 0;text-align:center}.container__box a{margin-top:2rem;display:block}.container__box h2{font-size:1.8rem}.container__btn{display:block;margin-top:2rem;text-align:center;padding:1rem 2rem;color:hsla(0,0%,100%,.72);font-weight:700;background-color:rgba(43,37,37,.837);text-decoration:none;text-transform:uppercase}.container__btn:hover{color:#20ce88}.container__title{text-transform:uppercase;font-size:1.8rem;padding:1rem 0;letter-spacing:4px;display:flex;justify-content:center}.container__title--about{text-align:center;font-size:2.2rem;letter-spacing:1px}.footer{position:absolute;bottom:0;left:0;width:100%}.footer__socials{position:fixed;right:0;bottom:0;display:flex;flex-direction:column;align-items:center;margin-bottom:4rem;background-color:rgba(43,37,37,.837)}.footer__socials i{color:hsla(0,0%,100%,.72);padding:.5rem .3rem;transition:.3s;font-size:2rem}.footer__socials i:hover{color:#20ce88}@media (max-height:600px) and (orientation:landscape){.nav__list-item{padding:1rem}.nav__box{transform:translateY(-40%)}}@media (min-width:576px){.splide__slide img{width:80%;height:auto}.splide__slide{display:flex;justify-content:center}.nav{font-size:1.8rem}.nav .hamburger-inner,.nav .hamburger-inner:after,.nav .hamburger-inner:before{width:40px}.footer{position:absolute;bottom:0;left:0;width:100%}.footer__socials i{padding:1rem;font-size:2.2rem}.footer__socials i:hover{color:#20ce88}}@media (min-width:900px){.splide__slide img{width:60%;height:auto}.splide__slide{display:flex;justify-content:center}.nav{max-width:1000px;margin:auto}.nav--mobile{display:none}.nav--desktop{display:block}.nav__list{display:flex;flex-direction:row;justify-content:space-around}.container__wrapper{max-width:1000px;margin:8rem auto}.container__btn{margin-top:5rem;padding:2rem 3rem}footer__socials{margin-bottom:6rem;padding:2rem 1rem}}@media (min-width:1200px){.splide__slide img{width:50%;height:auto}.splide__slide{display:flex;justify-content:center}}@media (min-width:1400px){.splide__slide img{width:45%;height:auto}}@media (min-width:1600px){.splide__slide img{width:40%;height:auto}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
